from __future__ import annotations

import datetime
from decimal import Decimal
from typing import Any, Literal

from pydantic import UUID4, BaseModel, Field, Json

# CUSTOM CLASSES
# Note: These are custom model classes for defining common features among
# Pydantic Base Schema.
# These classes were automatically generated by the Supabase CLI tool
# (sb-pydantic) based on the database schema.
# Do not modify these classes directly; instead, extend them as needed.
# You can run 
# `sb-pydantic gen 
#       --type pydantic 
#       --framework fastapi 
#       --db-url postgresql://postgres.upendnxzcnatkvlmkkfn:<password>@aws-1-ap-south-1.pooler.supabase.com:5432/postgres`
# Update the <password> if needed at https://supabase.com/dashboard/project/upendnxzcnatkvlmkkfn/database/settings

class CustomModel(BaseModel):
    """Base model class with common features."""

    # DO NOT REMOVE THIS METHOD!
    # The following is to assist with UUID serialization in JSON mode
    def model_dump(self, **kwargs):
        """Override model_dump to use JSON mode by default for UUID serialization"""
        if 'mode' not in kwargs:
            kwargs['mode'] = 'json'
        return super().model_dump(**kwargs)


class CustomModelInsert(CustomModel):
    """Base model for insert operations with common features."""

    pass


class CustomModelUpdate(CustomModel):
    """Base model for update operations with common features."""

    pass


# BASE CLASSES
# Note: These are the base Row models that include all fields.


class ConversationsBaseSchema(CustomModel):
    """Conversations Base Schema."""

    # Primary Keys
    conversation_id: UUID4

    # Columns
    created_at: datetime.datetime
    updated_at: datetime.datetime
    user_id: UUID4


class MessagesBaseSchema(CustomModel):
    """Messages Base Schema."""

    # Primary Keys
    message_id: UUID4

    # Columns
    conversation_id: UUID4 | None = Field(default=None)
    created_at: datetime.datetime
    message: str
    metadata: dict | list[dict] | list[Any] | Json | None = Field(default=None)
    role: str


class PropertiesBaseSchema(CustomModel):
    """Properties Base Schema."""

    # Primary Keys
    property_id: UUID4

    # Columns
    address: str | None = Field(default=None)
    amenities: dict | list[dict] | list[Any] | Json | None = Field(default=None)
    available_from: datetime.datetime | None = Field(default=None)
    created_at: datetime.datetime | None = Field(default=None)
    deposit: Decimal | None = Field(default=None)
    floor_level: Decimal | None = Field(default=None)
    furnished: bool | None = Field(default=None)
    image_embeddings: Any | None = Field(default=None)
    is_basement: bool | None = Field(default=None)
    is_pet_friendly: bool | None = Field(default=None)
    is_top_floor: bool | None = Field(default=None)
    latitude: Decimal | None = Field(default=None)
    lease_term_options_in_months: list[Decimal] | None = Field(default=None)
    listing_status: str | None = Field(default=None)
    location_earth: Any | None = Field(default=None)
    longitude: Decimal | None = Field(default=None)
    neighborhood: str | None = Field(default=None)
    num_bathrooms: Decimal | None = Field(default=None)
    num_bedrooms: Decimal
    property_age: Decimal | None = Field(default=None)
    property_type: str | None = Field(default=None)
    rent: Decimal | None = Field(default=None)
    sqft: Decimal | None = Field(default=None)
    updated_at: datetime.datetime | None = Field(default=None)


class PropertyAgentBaseSchema(CustomModel):
    """PropertyAgent Base Schema."""

    # Primary Keys
    id: UUID4

    # Columns
    company_name: str | None = Field(default=None)
    license_number: str | None = Field(default=None)


class PropertyPreferencesBaseSchema(CustomModel):
    """PropertyPreferences Base Schema."""

    # Primary Keys
    preference_id: UUID4

    # Columns
    created_at: datetime.datetime
    image_embeddings: Any | None = Field(default=None)
    max_bedrooms: int | None = Field(default=None)
    max_budget: float | None = Field(default=None)
    max_distance_from_mrt_in_km: float | None = Field(default=None)
    max_sqft: float | None = Field(default=None)
    min_bathrooms: float | None = Field(default=None)
    min_bedrooms: int | None = Field(default=None)
    min_budget: float | None = Field(default=None)
    min_sqft: float | None = Field(default=None)
    preferred_neighborhoods: list[str] | None = Field(default=None)
    property_type: list[str] | None = Field(default=None)
    reference_image_urls: list[str] | None = Field(default=None)
    required_amenities: list[str] | None = Field(default=None)
    updated_at: datetime.datetime
    user_id: UUID4


class ReminderNotificationsBaseSchema(CustomModel):
    """ReminderNotifications Base Schema."""

    # Primary Keys
    notification_id: UUID4

    # Columns
    delivery_status: str
    metadata: dict | list[dict] | list[Any] | Json | None = Field(default=None)
    reminder_id: UUID4
    sent_at: datetime.datetime
    user_id: UUID4


class ReminderTypesBaseSchema(CustomModel):
    """ReminderTypes Base Schema."""

    # Primary Keys
    reminder_type_id: int

    # Columns
    advance_notice_days: int
    description: str | None = Field(default=None)
    recurrence: int
    type_name: str


class RemindersBaseSchema(CustomModel):
    """Reminders Base Schema."""

    # Primary Keys
    reminder_id: UUID4

    # Columns
    created_at: datetime.datetime | None = Field(default=None)
    description: str | None = Field(default=None)
    eventbridge_rule: str | None = Field(default=None)
    eventbridge_rule_name: str | None = Field(default=None)
    last_sent: datetime.datetime | None = Field(default=None)
    metadata: dict | list[dict] | list[Any] | Json | None = Field(default=None)
    recurrence: str | None = Field(default=None)
    recurrence_pattern: str | None = Field(default=None)
    reminder_date: datetime.datetime | None = Field(default=None)
    reminder_type_id: int
    sns_topic_arn: str | None = Field(default=None)
    status: str | None = Field(default=None)
    updated_at: datetime.datetime | None = Field(default=None)
    user_id: UUID4


class TenancyAgreementsBaseSchema(CustomModel):
    """TenancyAgreements Base Schema."""

    # Primary Keys
    id: UUID4

    # Columns
    agreement_embeddings: Any | None = Field(default=None)
    created_at: datetime.datetime
    deposit_amount: Decimal | None = Field(default=None)
    embeddings: Any | None = Field(default=None)
    end_date: datetime.datetime
    is_signed_by_all_parties: bool
    last_modified: datetime.datetime | None = Field(default=None)
    monthly_rent: Decimal
    property_agent_id: UUID4
    property_id: UUID4 | None = Field(default=None)
    start_date: datetime.datetime
    status: str | None = Field(default=None)
    tenant_id: UUID4


class TenantProfilesBaseSchema(CustomModel):
    """TenantProfiles Base Schema."""

    # Primary Keys
    profile_id: UUID4

    # Columns
    created_at: datetime.datetime
    current_lease_end_date: datetime.datetime | None = Field(default=None)
    employment_status: str | None = Field(default=None)
    has_pets: bool
    household_size: int
    is_id_verified: bool | None = Field(default=None)
    is_smoker: bool
    monthly_income: float
    nationality: str
    notes: str | None = Field(default=None)
    occupation: str | None = Field(default=None)
    pet_description: str | None = Field(default=None)
    preferred_move_in_date: datetime.datetime
    tenant_type: str | None = Field(default=None)
    updated_at: datetime.datetime
    user_id: UUID4
    visa_status: str


class UsersBaseSchema(CustomModel):
    """Users Base Schema."""

    # Primary Keys
    user_id: UUID4

    # Columns
    created_at: datetime.datetime
    email_id: str
    last_login: datetime.datetime | None = Field(default=None)
    name: str
    password_hash: str | None = Field(default=None)
    password_reset_expires: datetime.datetime | None = Field(default=None)
    password_reset_token: str | None = Field(default=None)
    updated_at: datetime.datetime | None = Field(default=None)
    user_type: str | None = Field(default=None)


# INSERT CLASSES
# Note: These models are used for insert operations. Auto-generated fields
# (like IDs and timestamps) are optional.


class ConversationsInsert(CustomModelInsert):
    """Conversations Insert Schema."""

    # Primary Keys
    conversation_id: UUID4 | None = Field(default=None)  # has default value

    # Field properties:
    # created_at: has default value
    # updated_at: has default value

    # Required fields
    user_id: UUID4

    # Optional fields
    created_at: datetime.datetime | None = Field(default=None)
    updated_at: datetime.datetime | None = Field(default=None)


class MessagesInsert(CustomModelInsert):
    """Messages Insert Schema."""

    # Primary Keys
    message_id: UUID4 | None = Field(default=None)  # has default value

    # Field properties:
    # conversation_id: nullable
    # created_at: has default value
    # metadata: nullable

    # Required fields
    message: str
    role: str

    # Optional fields
    conversation_id: UUID4 | None = Field(default=None)
    created_at: datetime.datetime | None = Field(default=None)
    metadata: dict | list[dict] | list[Any] | Json | None = Field(default=None)


class PropertiesInsert(CustomModelInsert):
    """Properties Insert Schema."""

    # Primary Keys
    property_id: UUID4 | None = Field(default=None)  # has default value

    # Field properties:
    # address: nullable
    # amenities: nullable
    # available_from: nullable, has default value
    # created_at: nullable, has default value
    # deposit: nullable
    # floor_level: nullable
    # furnished: nullable
    # image_embeddings: nullable
    # is_basement: nullable
    # is_pet_friendly: nullable
    # is_top_floor: nullable
    # latitude: nullable
    # lease_term_options_in_months: nullable
    # listing_status: nullable
    # location_earth: nullable
    # longitude: nullable
    # neighborhood: nullable
    # num_bathrooms: nullable
    # property_age: nullable
    # property_type: nullable
    # rent: nullable
    # sqft: nullable
    # updated_at: nullable, has default value

    # Required fields
    num_bedrooms: Decimal

    # Optional fields
    address: str | None = Field(default=None)
    amenities: dict | list[dict] | list[Any] | Json | None = Field(default=None)
    available_from: datetime.datetime | None = Field(default=None)
    created_at: datetime.datetime | None = Field(default=None)
    deposit: Decimal | None = Field(default=None)
    floor_level: Decimal | None = Field(default=None)
    furnished: bool | None = Field(default=None)
    image_embeddings: Any | None = Field(default=None)
    is_basement: bool | None = Field(default=None)
    is_pet_friendly: bool | None = Field(default=None)
    is_top_floor: bool | None = Field(default=None)
    latitude: Decimal | None = Field(default=None)
    lease_term_options_in_months: list[Decimal] | None = Field(default=None)
    listing_status: str | None = Field(default=None)
    location_earth: Any | None = Field(default=None)
    longitude: Decimal | None = Field(default=None)
    neighborhood: str | None = Field(default=None)
    num_bathrooms: Decimal | None = Field(default=None)
    property_age: Decimal | None = Field(default=None)
    property_type: str | None = Field(default=None)
    rent: Decimal | None = Field(default=None)
    sqft: Decimal | None = Field(default=None)
    updated_at: datetime.datetime | None = Field(default=None)


class PropertyAgentInsert(CustomModelInsert):
    """PropertyAgent Insert Schema."""

    # Primary Keys
    id: UUID4 | None = Field(default=None)  # has default value

    # Field properties:
    # company_name: nullable
    # license_number: nullable

    # Optional fields
    company_name: str | None = Field(default=None)
    license_number: str | None = Field(default=None)


class PropertyPreferencesInsert(CustomModelInsert):
    """PropertyPreferences Insert Schema."""

    # Primary Keys
    preference_id: UUID4 | None = Field(default=None)  # has default value

    # Field properties:
    # created_at: has default value
    # image_embeddings: nullable
    # max_bedrooms: nullable
    # max_budget: nullable
    # max_distance_from_mrt_in_km: nullable
    # max_sqft: nullable
    # min_bathrooms: nullable
    # min_bedrooms: nullable
    # min_budget: nullable
    # min_sqft: nullable
    # preferred_neighborhoods: nullable
    # property_type: nullable
    # reference_image_urls: nullable
    # required_amenities: nullable
    # updated_at: has default value
    # user_id: has default value

    # Optional fields
    created_at: datetime.datetime | None = Field(default=None)
    image_embeddings: Any | None = Field(default=None)
    max_bedrooms: int | None = Field(default=None)
    max_budget: float | None = Field(default=None)
    max_distance_from_mrt_in_km: float | None = Field(default=None)
    max_sqft: float | None = Field(default=None)
    min_bathrooms: float | None = Field(default=None)
    min_bedrooms: int | None = Field(default=None)
    min_budget: float | None = Field(default=None)
    min_sqft: float | None = Field(default=None)
    preferred_neighborhoods: list[str] | None = Field(default=None)
    property_type: list[str] | None = Field(default=None)
    reference_image_urls: list[str] | None = Field(default=None)
    required_amenities: list[str] | None = Field(default=None)
    updated_at: datetime.datetime | None = Field(default=None)
    user_id: UUID4 | None = Field(default=None)


class ReminderNotificationsInsert(CustomModelInsert):
    """ReminderNotifications Insert Schema."""

    # Primary Keys
    notification_id: UUID4

    # Field properties:
    # metadata: nullable
    # sent_at: has default value

    # Required fields
    delivery_status: str
    reminder_id: UUID4
    user_id: UUID4

    # Optional fields
    metadata: dict | list[dict] | list[Any] | Json | None = Field(default=None)
    sent_at: datetime.datetime | None = Field(default=None)


class ReminderTypesInsert(CustomModelInsert):
    """ReminderTypes Insert Schema."""

    # Primary Keys

    # Field properties:
    # description: nullable

    # Required fields
    advance_notice_days: int
    recurrence: int
    type_name: str

    # Optional fields
    description: str | None = Field(default=None)


class RemindersInsert(CustomModelInsert):
    """Reminders Insert Schema."""

    # Primary Keys
    reminder_id: UUID4 | None = Field(default=None)  # has default value

    # Field properties:
    # created_at: nullable, has default value
    # description: nullable
    # eventbridge_rule: nullable
    # eventbridge_rule_name: nullable
    # last_sent: nullable, has default value
    # metadata: nullable
    # recurrence: nullable
    # recurrence_pattern: nullable
    # reminder_date: nullable, has default value
    # sns_topic_arn: nullable
    # status: nullable
    # updated_at: nullable, has default value

    # Required fields
    reminder_type_id: int
    user_id: UUID4

    # Optional fields
    created_at: datetime.datetime | None = Field(default=None)
    description: str | None = Field(default=None)
    eventbridge_rule: str | None = Field(default=None)
    eventbridge_rule_name: str | None = Field(default=None)
    last_sent: datetime.datetime | None = Field(default=None)
    metadata: dict | list[dict] | list[Any] | Json | None = Field(default=None)
    recurrence: str | None = Field(default=None)
    recurrence_pattern: str | None = Field(default=None)
    reminder_date: datetime.datetime | None = Field(default=None)
    sns_topic_arn: str | None = Field(default=None)
    status: str | None = Field(default=None)
    updated_at: datetime.datetime | None = Field(default=None)


class TenancyAgreementsInsert(CustomModelInsert):
    """TenancyAgreements Insert Schema."""

    # Primary Keys
    id: UUID4 | None = Field(default=None)  # has default value

    # Field properties:
    # agreement_embeddings: nullable
    # created_at: has default value
    # deposit_amount: nullable
    # embeddings: nullable
    # last_modified: nullable, has default value
    # property_id: nullable, has default value
    # status: nullable, has default value

    # Required fields
    end_date: datetime.datetime
    is_signed_by_all_parties: bool
    monthly_rent: Decimal
    property_agent_id: UUID4
    start_date: datetime.datetime
    tenant_id: UUID4

    # Optional fields
    agreement_embeddings: Any | None = Field(default=None)
    created_at: datetime.datetime | None = Field(default=None)
    deposit_amount: Decimal | None = Field(default=None)
    embeddings: Any | None = Field(default=None)
    last_modified: datetime.datetime | None = Field(default=None)
    property_id: UUID4 | None = Field(default=None)
    status: str | None = Field(default=None)


class TenantProfilesInsert(CustomModelInsert):
    """TenantProfiles Insert Schema."""

    # Primary Keys
    profile_id: UUID4 | None = Field(default=None)  # has default value

    # Field properties:
    # created_at: has default value
    # current_lease_end_date: nullable
    # employment_status: nullable
    # is_id_verified: nullable, has default value
    # is_smoker: has default value
    # notes: nullable
    # occupation: nullable
    # pet_description: nullable
    # tenant_type: nullable
    # updated_at: has default value

    # Required fields
    has_pets: bool
    household_size: int
    monthly_income: float
    nationality: str
    preferred_move_in_date: datetime.datetime
    user_id: UUID4
    visa_status: str

    # Optional fields
    created_at: datetime.datetime | None = Field(default=None)
    current_lease_end_date: datetime.datetime | None = Field(default=None)
    employment_status: str | None = Field(default=None)
    is_id_verified: bool | None = Field(default=None)
    is_smoker: bool | None = Field(default=None)
    notes: str | None = Field(default=None)
    occupation: str | None = Field(default=None)
    pet_description: str | None = Field(default=None)
    tenant_type: str | None = Field(default=None)
    updated_at: datetime.datetime | None = Field(default=None)


class UsersInsert(CustomModelInsert):
    """Users Insert Schema."""

    # Primary Keys
    user_id: UUID4 | None = Field(default=None)  # has default value

    # Field properties:
    # created_at: has default value
    # last_login: nullable
    # password_hash: nullable
    # password_reset_expires: nullable
    # password_reset_token: nullable
    # updated_at: nullable
    # user_type: nullable

    # Required fields
    email_id: str
    name: str

    # Optional fields
    created_at: datetime.datetime | None = Field(default=None)
    last_login: datetime.datetime | None = Field(default=None)
    password_hash: str | None = Field(default=None)
    password_reset_expires: datetime.datetime | None = Field(default=None)
    password_reset_token: str | None = Field(default=None)
    updated_at: datetime.datetime | None = Field(default=None)
    user_type: Literal["tenant", "property_agent"] | None = Field(default="tenant")


# UPDATE CLASSES
# Note: These models are used for update operations. All fields are optional.


class ConversationsUpdate(CustomModelUpdate):
    """Conversations Update Schema."""

    # Primary Keys
    conversation_id: UUID4 | None = Field(default=None)

    # Field properties:
    # created_at: has default value
    # updated_at: has default value

    # Optional fields
    created_at: datetime.datetime | None = Field(default=None)
    updated_at: datetime.datetime | None = Field(default=None)
    user_id: UUID4 | None = Field(default=None)


class MessagesUpdate(CustomModelUpdate):
    """Messages Update Schema."""

    # Primary Keys
    message_id: UUID4 | None = Field(default=None)

    # Field properties:
    # conversation_id: nullable
    # created_at: has default value
    # metadata: nullable

    # Optional fields
    conversation_id: UUID4 | None = Field(default=None)
    created_at: datetime.datetime | None = Field(default=None)
    message: str | None = Field(default=None)
    metadata: dict | list[dict] | list[Any] | Json | None = Field(default=None)
    role: str | None = Field(default=None)


class PropertiesUpdate(CustomModelUpdate):
    """Properties Update Schema."""

    # Primary Keys
    property_id: UUID4 | None = Field(default=None)

    # Field properties:
    # address: nullable
    # amenities: nullable
    # available_from: nullable, has default value
    # created_at: nullable, has default value
    # deposit: nullable
    # floor_level: nullable
    # furnished: nullable
    # image_embeddings: nullable
    # is_basement: nullable
    # is_pet_friendly: nullable
    # is_top_floor: nullable
    # latitude: nullable
    # lease_term_options_in_months: nullable
    # listing_status: nullable
    # location_earth: nullable
    # longitude: nullable
    # neighborhood: nullable
    # num_bathrooms: nullable
    # property_age: nullable
    # property_type: nullable
    # rent: nullable
    # sqft: nullable
    # updated_at: nullable, has default value

    # Optional fields
    address: str | None = Field(default=None)
    amenities: dict | list[dict] | list[Any] | Json | None = Field(default=None)
    available_from: datetime.datetime | None = Field(default=None)
    created_at: datetime.datetime | None = Field(default=None)
    deposit: Decimal | None = Field(default=None)
    floor_level: Decimal | None = Field(default=None)
    furnished: bool | None = Field(default=None)
    image_embeddings: Any | None = Field(default=None)
    is_basement: bool | None = Field(default=None)
    is_pet_friendly: bool | None = Field(default=None)
    is_top_floor: bool | None = Field(default=None)
    latitude: Decimal | None = Field(default=None)
    lease_term_options_in_months: list[Decimal] | None = Field(default=None)
    listing_status: str | None = Field(default=None)
    location_earth: Any | None = Field(default=None)
    longitude: Decimal | None = Field(default=None)
    neighborhood: str | None = Field(default=None)
    num_bathrooms: Decimal | None = Field(default=None)
    num_bedrooms: Decimal | None = Field(default=None)
    property_age: Decimal | None = Field(default=None)
    property_type: str | None = Field(default=None)
    rent: Decimal | None = Field(default=None)
    sqft: Decimal | None = Field(default=None)
    updated_at: datetime.datetime | None = Field(default=None)


class PropertyAgentUpdate(CustomModelUpdate):
    """PropertyAgent Update Schema."""

    # Primary Keys
    id: UUID4 | None = Field(default=None)

    # Field properties:
    # company_name: nullable
    # license_number: nullable

    # Optional fields
    company_name: str | None = Field(default=None)
    license_number: str | None = Field(default=None)


class PropertyPreferencesUpdate(CustomModelUpdate):
    """PropertyPreferences Update Schema."""

    # Primary Keys
    preference_id: UUID4 | None = Field(default=None)

    # Field properties:
    # created_at: has default value
    # image_embeddings: nullable
    # max_bedrooms: nullable
    # max_budget: nullable
    # max_distance_from_mrt_in_km: nullable
    # max_sqft: nullable
    # min_bathrooms: nullable
    # min_bedrooms: nullable
    # min_budget: nullable
    # min_sqft: nullable
    # preferred_neighborhoods: nullable
    # property_type: nullable
    # reference_image_urls: nullable
    # required_amenities: nullable
    # updated_at: has default value
    # user_id: has default value

    # Optional fields
    created_at: datetime.datetime | None = Field(default=None)
    image_embeddings: Any | None = Field(default=None)
    max_bedrooms: int | None = Field(default=None)
    max_budget: float | None = Field(default=None)
    max_distance_from_mrt_in_km: float | None = Field(default=None)
    max_sqft: float | None = Field(default=None)
    min_bathrooms: float | None = Field(default=None)
    min_bedrooms: int | None = Field(default=None)
    min_budget: float | None = Field(default=None)
    min_sqft: float | None = Field(default=None)
    preferred_neighborhoods: list[str] | None = Field(default=None)
    property_type: list[str] | None = Field(default=None)
    reference_image_urls: list[str] | None = Field(default=None)
    required_amenities: list[str] | None = Field(default=None)
    updated_at: datetime.datetime | None = Field(default=None)
    user_id: UUID4 | None = Field(default=None)


class ReminderNotificationsUpdate(CustomModelUpdate):
    """ReminderNotifications Update Schema."""

    # Primary Keys
    notification_id: UUID4 | None = Field(default=None)

    # Field properties:
    # metadata: nullable
    # sent_at: has default value

    # Optional fields
    delivery_status: str | None = Field(default=None)
    metadata: dict | list[dict] | list[Any] | Json | None = Field(default=None)
    reminder_id: UUID4 | None = Field(default=None)
    sent_at: datetime.datetime | None = Field(default=None)
    user_id: UUID4 | None = Field(default=None)


class ReminderTypesUpdate(CustomModelUpdate):
    """ReminderTypes Update Schema."""

    # Primary Keys

    # Field properties:
    # description: nullable

    # Optional fields
    advance_notice_days: int | None = Field(default=None)
    description: str | None = Field(default=None)
    recurrence: int | None = Field(default=None)
    type_name: str | None = Field(default=None)


class RemindersUpdate(CustomModelUpdate):
    """Reminders Update Schema."""

    # Primary Keys
    reminder_id: UUID4 | None = Field(default=None)

    # Field properties:
    # created_at: nullable, has default value
    # description: nullable
    # eventbridge_rule: nullable
    # eventbridge_rule_name: nullable
    # last_sent: nullable, has default value
    # metadata: nullable
    # recurrence: nullable
    # recurrence_pattern: nullable
    # reminder_date: nullable, has default value
    # sns_topic_arn: nullable
    # status: nullable
    # updated_at: nullable, has default value

    # Optional fields
    created_at: datetime.datetime | None = Field(default=None)
    description: str | None = Field(default=None)
    eventbridge_rule: str | None = Field(default=None)
    eventbridge_rule_name: str | None = Field(default=None)
    last_sent: datetime.datetime | None = Field(default=None)
    metadata: dict | list[dict] | list[Any] | Json | None = Field(default=None)
    recurrence: str | None = Field(default=None)
    recurrence_pattern: str | None = Field(default=None)
    reminder_date: datetime.datetime | None = Field(default=None)
    reminder_type_id: int | None = Field(default=None)
    sns_topic_arn: str | None = Field(default=None)
    status: str | None = Field(default=None)
    updated_at: datetime.datetime | None = Field(default=None)
    user_id: UUID4 | None = Field(default=None)


class TenancyAgreementsUpdate(CustomModelUpdate):
    """TenancyAgreements Update Schema."""

    # Primary Keys
    id: UUID4 | None = Field(default=None)

    # Field properties:
    # agreement_embeddings: nullable
    # created_at: has default value
    # deposit_amount: nullable
    # embeddings: nullable
    # last_modified: nullable, has default value
    # property_id: nullable, has default value
    # status: nullable, has default value

    # Optional fields
    agreement_embeddings: Any | None = Field(default=None)
    created_at: datetime.datetime | None = Field(default=None)
    deposit_amount: Decimal | None = Field(default=None)
    embeddings: Any | None = Field(default=None)
    end_date: datetime.datetime | None = Field(default=None)
    is_signed_by_all_parties: bool | None = Field(default=None)
    last_modified: datetime.datetime | None = Field(default=None)
    monthly_rent: Decimal | None = Field(default=None)
    property_agent_id: UUID4 | None = Field(default=None)
    property_id: UUID4 | None = Field(default=None)
    start_date: datetime.datetime | None = Field(default=None)
    status: str | None = Field(default=None)
    tenant_id: UUID4 | None = Field(default=None)


class TenantProfilesUpdate(CustomModelUpdate):
    """TenantProfiles Update Schema."""

    # Primary Keys
    profile_id: UUID4 | None = Field(default=None)

    # Field properties:
    # created_at: has default value
    # current_lease_end_date: nullable
    # employment_status: nullable
    # is_id_verified: nullable, has default value
    # is_smoker: has default value
    # notes: nullable
    # occupation: nullable
    # pet_description: nullable
    # tenant_type: nullable
    # updated_at: has default value

    # Optional fields
    created_at: datetime.datetime | None = Field(default=None)
    current_lease_end_date: datetime.datetime | None = Field(default=None)
    employment_status: str | None = Field(default=None)
    has_pets: bool | None = Field(default=None)
    household_size: int | None = Field(default=None)
    is_id_verified: bool | None = Field(default=None)
    is_smoker: bool | None = Field(default=None)
    monthly_income: float | None = Field(default=None)
    nationality: str | None = Field(default=None)
    notes: str | None = Field(default=None)
    occupation: str | None = Field(default=None)
    pet_description: str | None = Field(default=None)
    preferred_move_in_date: datetime.datetime | None = Field(default=None)
    tenant_type: str | None = Field(default=None)
    updated_at: datetime.datetime | None = Field(default=None)
    user_id: UUID4 | None = Field(default=None)
    visa_status: str | None = Field(default=None)


class UsersUpdate(CustomModelUpdate):
    """Users Update Schema."""

    # Primary Keys
    user_id: UUID4 | None = Field(default=None)

    # Field properties:
    # created_at: has default value
    # last_login: nullable
    # password_hash: nullable
    # password_reset_expires: nullable
    # password_reset_token: nullable
    # updated_at: nullable
    # user_type: nullable

    # Optional fields
    created_at: datetime.datetime | None = Field(default=None)
    email_id: str | None = Field(default=None)
    last_login: datetime.datetime | None = Field(default=None)
    name: str | None = Field(default=None)
    password_hash: str | None = Field(default=None)
    password_reset_expires: datetime.datetime | None = Field(default=None)
    password_reset_token: str | None = Field(default=None)
    updated_at: datetime.datetime | None = Field(default=None)
    user_type: Literal["tenant", "property_agent"] | None = Field(default="tenant")


# OPERATIONAL CLASSES


class Conversations(ConversationsBaseSchema):
    """Conversations Schema for Pydantic.

    Inherits from ConversationsBaseSchema. Add any customization here.
    """

    # Foreign Keys
    user: Users | None = Field(default=None)
    messages: list[Messages] | None = Field(default=None)


class Messages(MessagesBaseSchema):
    """Messages Schema for Pydantic.

    Inherits from MessagesBaseSchema. Add any customization here.
    """

    # Foreign Keys
    conversation: Conversations | None = Field(default=None)


class Properties(PropertiesBaseSchema):
    """Properties Schema for Pydantic.

    Inherits from PropertiesBaseSchema. Add any customization here.
    """

    # Foreign Keys
    tenancy_agreements: list[TenancyAgreements] | None = Field(default=None)


class PropertyAgent(PropertyAgentBaseSchema):
    """PropertyAgent Schema for Pydantic.

    Inherits from PropertyAgentBaseSchema. Add any customization here.
    """

    # Foreign Keys
    user: Users | None = Field(default=None)
    tenancy_agreements: TenancyAgreements | None = Field(default=None)


class PropertyPreferences(PropertyPreferencesBaseSchema):
    """PropertyPreferences Schema for Pydantic.

    Inherits from PropertyPreferencesBaseSchema. Add any customization here.
    """

    # Foreign Keys
    user: Users | None = Field(default=None)


class ReminderNotifications(ReminderNotificationsBaseSchema):
    """ReminderNotifications Schema for Pydantic.

    Inherits from ReminderNotificationsBaseSchema. Add any customization here.
    """

    # Foreign Keys
    reminder: Reminders | None = Field(default=None)
    user: Users | None = Field(default=None)


class ReminderTypes(ReminderTypesBaseSchema):
    """ReminderTypes Schema for Pydantic.

    Inherits from ReminderTypesBaseSchema. Add any customization here.
    """

    # Foreign Keys
    reminders: list[Reminders] | None = Field(default=None)


class Reminders(RemindersBaseSchema):
    """Reminders Schema for Pydantic.

    Inherits from RemindersBaseSchema. Add any customization here.
    """

    # Foreign Keys
    user: Users | None = Field(default=None)
    reminder_type: ReminderTypes | None = Field(default=None)
    reminder_notifications: list[ReminderNotifications] | None = Field(default=None)


class TenancyAgreements(TenancyAgreementsBaseSchema):
    """TenancyAgreements Schema for Pydantic.

    Inherits from TenancyAgreementsBaseSchema. Add any customization here.
    """

    # Foreign Keys
    property: Properties | None = Field(default=None)
    user: Users | None = Field(default=None)
    property_agent: PropertyAgent | None = Field(default=None)


class TenantProfiles(TenantProfilesBaseSchema):
    """TenantProfiles Schema for Pydantic.

    Inherits from TenantProfilesBaseSchema. Add any customization here.
    """

    # Foreign Keys
    user: Users | None = Field(default=None)


class Users(UsersBaseSchema):
    """Users Schema for Pydantic.

    Inherits from UsersBaseSchema. Add any customization here.
    """

    # Foreign Keys
    conversations: list[Conversations] | None = Field(default=None)
    property_agent: PropertyAgent | None = Field(default=None)
    property_preferences: list[PropertyPreferences] | None = Field(default=None)
    reminder_notifications: list[ReminderNotifications] | None = Field(default=None)
    reminders: list[Reminders] | None = Field(default=None)
    tenancy_agreements: list[TenancyAgreements] | None = Field(default=None)
    tenant_profiles: list[TenantProfiles] | None = Field(default=None)
